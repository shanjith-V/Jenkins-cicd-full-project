pipeline {
    agent any
    tools
    {
        maven 'maven-homebre'
        }

    environment {
        // Docker Hub
        REGISTRY = "shanjithv"
        IMAGE_NAME = "spring-boot-app"
        DOCKER_IMAGE = "${REGISTRY}/${IMAGE_NAME}:${BUILD_NUMBER}"
        DOCKER_CREDENTIALS = credentials('dockercred')

    

        // GitHub Repo for Manifests
        GIT_REPO_NAME = 'Jenkins-cicd-full-project'
        GIT_USER_NAME = 'shanjith-V'
        GIT_USER_EMAIL = 'sanjumac0810@gmail.com'
        GITHUB_TOKEN = credentials('githubcred')
    }

  stages {
    stage('Checkout') {
      steps {
        git branch: 'main', url: 'https://github.com/shanjith-V/Jenkins-cicd-full-project.git'
      }
    }

    stage('Build and Test') {
      steps {
        sh 'cd spring-boot-app && mvn clean package -DskipTests'
      }
    }

    stage('Static Code Analysis') {
      steps {
        withCredentials([string(credentialsId: 'SonarQubeToken', variable: 'SONAR_AUTH_TOKEN')]) {
          sh '''
            cd spring-boot-app && mvn sonar:sonar \
              -Dsonar.projectKey=spring-boot-app \
              -Dsonar.host.url=http://localhost:9000 \
              -Dsonar.login=$SONAR_AUTH_TOKEN
          '''
        }
      }
    }

    stage('Build and Push Docker Image') {
      steps {
        script {
          sh 'cd spring-boot-app && docker build -t shanjithv/spring-boot-app:${BUILD_NUMBER} .'
          def dockerImage = docker.image("shanjithv/spring-boot-app:${BUILD_NUMBER}")
          docker.withRegistry('https://index.docker.io/v1/', 'dockercred') {
            dockerImage.push()
          }
        }
      }
    }

    stage('Update Deployment File') {
      steps {
        withCredentials([string(credentialsId: 'githubcred', variable: 'GITHUB_TOKEN')]) {
          sh '''
            git config user.email "sanjumac0810@gmail.com"
            git config user.name "shanjith-V"
            sed -i "s|replaceImageTag|''' + "${BUILD_NUMBER}" + '''|g" spring-boot-app-manifests/deployment.yml
            git add spring-boot-app-manifests/deployment.yml
            git commit -m "Update deployment image to version ''' + "${BUILD_NUMBER}" + '''"
            git push https://${GITHUB_TOKEN}@github.com/shanjith-V/Jenkins-cicd-full-project.git HEAD:main
          '''
        }
      }
    }

    stage('Deploy with ArgoCD') {
      steps {
        withCredentials([string(credentialsId: 'argocd-password', variable: 'ARGO_PASS')]) {
          sh '''
            argocd login localhost:8082 --username admin --password $ARGO_PASS --insecure
            argocd app sync spring-boot-app
          '''
        }
      }
    }
  }
}



